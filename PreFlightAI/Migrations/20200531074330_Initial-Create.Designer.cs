// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PreFlight.AI.Server.Services.SQL;

namespace PreFlight.AI.Server.Migrations
{
    [DbContext(typeof(ServerDbContext))]
    [Migration("20200531074330_Initial-Create")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PreFlightAI.Shared.Employee.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("JoinedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowVersion")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("employeeJobCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("employeeLocationId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("employeeJobCategoryId");

                    b.HasIndex("employeeLocationId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            BirthDate = new DateTime(1988, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Juneau",
                            Comment = "Using Fake Address and Phone number here",
                            Email = "danny.dowling@gmail.com",
                            FirstName = "Danny",
                            JoinedDate = new DateTime(2020, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Dowling",
                            Password = "Password",
                            PhoneNumber = "324777888773",
                            RowVersion = 0,
                            Street = "1 Grimoire Place",
                            Zip = "99801",
                            employeeJobCategoryId = 9,
                            employeeLocationId = 4
                        });
                });

            modelBuilder.Entity("PreFlightAI.Shared.Employee.EmployeeJobCategory", b =>
                {
                    b.Property<int>("employeeJobCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("JobCategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("employeeJobCategoryId");

                    b.ToTable("EmployeeJobCategory");
                });

            modelBuilder.Entity("PreFlightAI.Shared.Employee.EmployeeLocation", b =>
                {
                    b.Property<int>("employeeLocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("employeeLocationName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("employeeLocationId");

                    b.ToTable("EmployeeLocation");
                });

            modelBuilder.Entity("PreFlightAI.Shared.Places.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            LocationId = 1,
                            Name = "Juneau"
                        },
                        new
                        {
                            LocationId = 2,
                            Name = "Seattle"
                        },
                        new
                        {
                            LocationId = 3,
                            Name = "Fairbanks"
                        },
                        new
                        {
                            LocationId = 4,
                            Name = "Anchorage"
                        },
                        new
                        {
                            LocationId = 5,
                            Name = "Ketchikan"
                        },
                        new
                        {
                            LocationId = 6,
                            Name = "Sitka"
                        },
                        new
                        {
                            LocationId = 7,
                            Name = "Wrangell"
                        },
                        new
                        {
                            LocationId = 8,
                            Name = "Petersburg"
                        });
                });

            modelBuilder.Entity("PreFlightAI.Shared.Places.Weather", b =>
                {
                    b.Property<int>("weatherID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AirPressure")
                        .HasColumnType("float");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<double>("Temperature")
                        .HasColumnType("float");

                    b.Property<double>("WeightValue")
                        .HasColumnType("float");

                    b.Property<string>("weatherLink")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("weatherID");

                    b.ToTable("Weathers");

                    b.HasData(
                        new
                        {
                            weatherID = 1,
                            AirPressure = 1.0,
                            Temperature = 60.0,
                            WeightValue = 6.7000000000000002
                        });
                });

            modelBuilder.Entity("PreFlightAI.Shared.Things.JobCategory", b =>
                {
                    b.Property<int>("JobCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("JobCategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JobCategoryId");

                    b.ToTable("JobCategories");

                    b.HasData(
                        new
                        {
                            JobCategoryId = 1,
                            JobCategoryName = "Guest"
                        },
                        new
                        {
                            JobCategoryId = 2,
                            JobCategoryName = "Visitor"
                        },
                        new
                        {
                            JobCategoryId = 3,
                            JobCategoryName = "Verified"
                        },
                        new
                        {
                            JobCategoryId = 4,
                            JobCategoryName = "Worker"
                        },
                        new
                        {
                            JobCategoryId = 5,
                            JobCategoryName = "IT Worker"
                        },
                        new
                        {
                            JobCategoryId = 6,
                            JobCategoryName = "IT Lead"
                        },
                        new
                        {
                            JobCategoryId = 7,
                            JobCategoryName = "Manager"
                        },
                        new
                        {
                            JobCategoryId = 8,
                            JobCategoryName = "Senior Manager"
                        },
                        new
                        {
                            JobCategoryId = 9,
                            JobCategoryName = "Owner"
                        });
                });

            modelBuilder.Entity("PreFlightAI.Shared.Users.typedUser", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("JoinedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowVersion")
                        .HasColumnType("int");

                    b.HasKey("userId");

                    b.ToTable("typedUsers");

                    b.HasData(
                        new
                        {
                            userId = 1,
                            Comment = "Using Fake Address and Phone number here",
                            Email = "danny.dowling@gmail.com",
                            FirstName = "Danny",
                            JoinedDate = new DateTime(2019, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Dowling",
                            Password = "password",
                            RowVersion = 0
                        });
                });

            modelBuilder.Entity("PreFlightAI.Shared.Employee.Employee", b =>
                {
                    b.HasOne("PreFlightAI.Shared.Employee.EmployeeJobCategory", "employeeJobCategory")
                        .WithMany()
                        .HasForeignKey("employeeJobCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PreFlightAI.Shared.Employee.EmployeeLocation", "employeeLocation")
                        .WithMany()
                        .HasForeignKey("employeeLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
